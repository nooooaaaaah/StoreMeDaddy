@using Microsoft.AspNetCore.Components.Web

<div class="" style="@styleString" @onmousemove="OnMouseMove" @onmouseup="OnMouseUp">
    <div class="flex justify-between">
        <h2 class="text-lg font-medium text-gray-800">@Title</h2>
        <button @onmousedown="ToggleResize" class="text-gray-600 hover:text-gray-800 cursor-se-resize">
            @ResizeIcon
        </button>
    </div>
    <div class="resize absolute bottom-0 right-0 w-10 h-10 bg-black cursor-se-resize"
        @onmousedown="StartResize"></div>
    <div class="content p-4">
        @ChildContent
    </div>
</div>

@code
{
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public required RenderFragment ChildContent { get; set; }

    private bool isResizing = false;
    private string styleString = "";
    private string ResizeIcon => isResizing ? "▮" : "▯";
    private double initialMouseX;
    private double initialMouseY;

    private void ToggleResize()
    {
        isResizing = !isResizing;
        if (!isResizing)
        {
            styleString = "";
        }
    }

    private void StartResize(MouseEventArgs e)
    {
        isResizing = true;
        initialMouseX = e.ClientX;
        initialMouseY = e.ClientY;
    }

    private void Resize(MouseEventArgs e)
    {
        double deltaX = e.ClientX - initialMouseX;
        double deltaY = e.ClientY - initialMouseY;
        styleString = $"width:{deltaX}px; height:{deltaY}px;";
    }

    private void StopResize(MouseEventArgs e)
    {
        isResizing = false;
        initialMouseX = 0;
        initialMouseY = 0;
    }

    private void OnMouseMove(MouseEventArgs e)
    {
        if (isResizing)
        {
            Resize(e);
        }
    }

    private void OnMouseUp(MouseEventArgs e)
    {
        StopResize(e);
    }

    public void Dispose()
    {
        // No need to remove event listeners since they are handled in the component
    }
}